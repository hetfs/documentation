"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7401],{4607:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>l});var i=s(274);const r={},t=i.createContext(r);function o(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(t.Provider,{value:e},n.children)}},4907:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Vale_Linter/Integration Vale with GitHub Actions","title":"Integrating vale with github actions","description":"Automate documentation linting by integrating Vale into CI/CD workflows using GitHub Actions.","source":"@site/docs/Vale_Linter/Integration Vale with GitHub Actions.md","sourceDirName":"Vale_Linter","slug":"/Vale_Linter/Integration Vale with GitHub Actions","permalink":"/documentation/docs/Vale_Linter/Integration Vale with GitHub Actions","draft":false,"unlisted":false,"editUrl":"https://github.com/hetfs/documentation/docs/Vale_Linter/Integration Vale with GitHub Actions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Handling Incorrect Vale Flags","permalink":"/documentation/docs/Vale_Linter/Handling Incorrect Vale Flags"},"next":{"title":"Vale Command-Line Flags and Commands","permalink":"/documentation/docs/Vale_Linter/Vale CLI Flags and Commands"}}');var r=s(1050),t=s(4607);const o={},l="Integrating vale with github actions",c={},a=[{value:"\ud83d\udccc Setting up gitHub actions",id:"-setting-up-github-actions",level:2},{value:"\ud83d\udcc4 GitHub actions workflow",id:"-github-actions-workflow",level:2},{value:"\ud83d\udd39 CI/CD Features",id:"-cicd-features",level:2},{value:"\ud83d\udd27 Customization options",id:"-customization-options",level:2},{value:"\ud83d\udcc2 Recommended repository structure",id:"-recommended-repository-structure",level:2},{value:"<strong>\ud83d\udee0\ufe0f Troubleshooting vale issues</strong>",id:"\ufe0f-troubleshooting-vale-issues",level:2},{value:"<strong>\u274c 1\ufe0f\u20e3 Missing styles?</strong>",id:"-1\ufe0f\u20e3-missing-styles",level:3},{value:"<strong>\u274c 2\ufe0f\u20e3 <code>.vale.ini</code> Parsing errors?</strong>",id:"-2\ufe0f\u20e3-valeini-parsing-errors",level:3},{value:"<strong>\u274c 3\ufe0f\u20e3 Excluding unwanted files?</strong>",id:"-3\ufe0f\u20e3-excluding-unwanted-files",level:3},{value:"<strong>\ud83d\udccc Final thoughts</strong>",id:"-final-thoughts",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"integrating-vale-with-github-actions",children:"Integrating vale with github actions"})}),"\n",(0,r.jsxs)(e.p,{children:["Automate documentation linting by integrating ",(0,r.jsx)(e.strong,{children:"Vale into CI/CD workflows"})," using ",(0,r.jsx)(e.strong,{children:"GitHub Actions"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"-setting-up-github-actions",children:"\ud83d\udccc Setting up gitHub actions"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Create a GitHub Actions workflow"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Navigate to your repository\u2019s root."}),"\n",(0,r.jsxs)(e.li,{children:["Create a ",(0,r.jsx)(e.code,{children:".github/workflows/"})," directory if it doesn't exist."]}),"\n",(0,r.jsxs)(e.li,{children:["Add a ",(0,r.jsx)(e.code,{children:"vale-linter.yml"})," file inside it."]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Use the official Vale GitHub Action"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/errata-ai/vale-action",children:"GitHub Action for Vale"})}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-github-actions-workflow",children:"\ud83d\udcc4 GitHub actions workflow"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:'name: Documentation Linting\r\non:\r\n  push: # Run on every push to main\r\n    branches:\r\n      - main\r\n  pull_request: # Run on all pull requests\r\n    branches:\r\n      - "*"\r\njobs:\r\n  lint:\r\n    name: Run Vale Linter\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Checkout Repository\r\n        uses: actions/checkout@v4\r\n\r\n      # Install external parsers if needed\r\n      # For AsciiDoc users:\r\n      - name: Install Asciidoctor\r\n        run: sudo apt-get install -y asciidoctor\r\n      # For reStructuredText users:\r\n      - name: Install docutils\r\n        run: sudo apt-get install -y docutils\r\n\r\n      - name: Run Vale Linter\r\n        uses: errata-ai/vale-action@v2.1.1\r\n        with:\r\n          version: 2.17.0\r\n          files: .\r\n          reporter: github-pr-check # Options: github-pr-check, github-pr-review, github-check\r\n          fail_on_error: true\r\n          filter_mode: nofilter # Options: added, diff_context, file, nofilter\r\n          vale_flags: "--glob=*.md"\r\n          env:\r\n                # Required, set by GitHub actions automatically:\r\n               #GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\r\n               #REVIEWDOG_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}\n'})}),"\n",(0,r.jsx)(e.p,{children:"After making these changes, run the following commands:"}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-cicd-features",children:"\ud83d\udd39 CI/CD Features"}),"\n",(0,r.jsxs)(e.p,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Runs on Every Push & Pull Request"}),": Automatically triggers on ",(0,r.jsx)(e.code,{children:"main"})," and PRs.",(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsx)(e.strong,{children:"Flags Documentation Issues in PRs"}),": Prevents issues before merging.",(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsx)(e.strong,{children:"Supports Additional Parsers"}),": Installs ",(0,r.jsx)(e.strong,{children:"Asciidoctor"})," and ",(0,r.jsx)(e.strong,{children:"docutils"})," as needed.",(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsx)(e.strong,{children:"Fails PR on Critical Errors"})," (",(0,r.jsx)(e.code,{children:"fail_on_error: true"}),")."]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'git add .\r\ngit commit -m "Apply documentation updates"\r\ngit push\n'})}),"\n",(0,r.jsxs)(e.p,{children:["Check the ",(0,r.jsx)(e.strong,{children:"Actions"})," tab in your repository to view the workflow status."]}),"\n",(0,r.jsxs)(e.p,{children:["Click on the\xa0",(0,r.jsx)(e.code,{children:"changes"}),"\xa0button and click on the job\xa0",(0,r.jsx)(e.code,{children:"prose"})]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-customization-options",children:"\ud83d\udd27 Customization options"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Lint only specific directories"})," (e.g., ",(0,r.jsx)(e.code,{children:"docs/"}),"):"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"with:\r\n  files: docs/\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Use PR review comments instead of PR checks"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"with:\r\n  reporter: github-pr-review\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Exclude specific files using glob patterns"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:'with:\r\n  vale_flags: "--glob=!docs/excluded.md"\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-recommended-repository-structure",children:"\ud83d\udcc2 Recommended repository structure"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:".github/\r\n\u251c\u2500\u2500 styles/\r\n\u2502   \u2514\u2500\u2500 vocab.txt          # Custom terminology rules for consistent language\r\n\u2514\u2500\u2500 workflows/\r\n    \u2514\u2500\u2500 vale-linter.yml     # GitHub Actions workflow for automated linting\r\n.vale.ini                   # Vale configuration file for linting rules\r\ndocs/\r\n\u2514\u2500\u2500 example.md              # Documentation file with examples and guidelines\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Explanation of structure:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:".github/"})}),": Contains GitHub-specific files."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:"styles/"})}),": Holds custom terminology rules to ensure consistent language across the project."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:"workflows/"})}),": Contains the workflow configuration for GitHub Actions, which automates the linting process using Vale."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:".vale.ini"})}),": The main configuration file for Vale, defining the linting rules and settings for the project."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:"docs/"})}),": Directory for project documentation."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"\ufe0f-troubleshooting-vale-issues",children:(0,r.jsx)(e.strong,{children:"\ud83d\udee0\ufe0f Troubleshooting vale issues"})}),"\n",(0,r.jsx)(e.h3,{id:"-1\ufe0f\u20e3-missing-styles",children:(0,r.jsx)(e.strong,{children:"\u274c 1\ufe0f\u20e3 Missing styles?"})}),"\n",(0,r.jsx)(e.p,{children:"Run:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:"vale sync\n"})}),"\n",(0,r.jsxs)(e.p,{children:["Ensure the ",(0,r.jsx)(e.code,{children:"styles/"})," directory contains required styles (",(0,r.jsx)(e.code,{children:"Microsoft"}),", ",(0,r.jsx)(e.code,{children:"write-good"}),", etc.)."]}),"\n",(0,r.jsx)(e.h3,{id:"-2\ufe0f\u20e3-valeini-parsing-errors",children:(0,r.jsxs)(e.strong,{children:["\u274c 2\ufe0f\u20e3 ",(0,r.jsx)(e.code,{children:".vale.ini"})," Parsing errors?"]})}),"\n",(0,r.jsxs)(e.p,{children:["Check for:",(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsxs)(e.strong,{children:["Proper formatting of ",(0,r.jsx)(e.code,{children:"BasedOnStyles"})]}),(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsx)(e.strong,{children:"No missing commas or syntax errors"}),(0,r.jsx)(e.br,{}),"\n","\u2705 ",(0,r.jsxs)(e.strong,{children:["Valid ",(0,r.jsx)(e.code,{children:"IgnorePatterns"})]})]}),"\n",(0,r.jsx)(e.h3,{id:"-3\ufe0f\u20e3-excluding-unwanted-files",children:(0,r.jsx)(e.strong,{children:"\u274c 3\ufe0f\u20e3 Excluding unwanted files?"})}),"\n",(0,r.jsxs)(e.p,{children:["Modify your ",(0,r.jsx)(e.code,{children:".vale.ini"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ini",children:"ignore = node_modules, vendor, dist, .git, .github\n"})}),"\n",(0,r.jsx)(e.p,{children:"This prevents Vale from linting unnecessary directories."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-final-thoughts",children:(0,r.jsx)(e.strong,{children:"\ud83d\udccc Final thoughts"})}),"\n",(0,r.jsxs)(e.p,{children:["Integrating Vale with GitHub Actions is a ",(0,r.jsx)(e.strong,{children:"powerful way"})," for ",(0,r.jsx)(e.strong,{children:"technical writers, developers, and documentation teams"})," to ensure ",(0,r.jsx)(e.strong,{children:"consistent, professional, and error-free documentation"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["It works for ",(0,r.jsx)(e.strong,{children:"both local linting and CI/CD automation"}),", helping you maintain ",(0,r.jsx)(e.strong,{children:"high documentation standards"})," effortlessly."]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);